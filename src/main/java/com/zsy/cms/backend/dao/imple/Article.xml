<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zsy.cms.backend.model.Article">
    <insert id="add" parameterType="Article" keyProperty="id" useGeneratedKeys="true">
        insert into t_article
        (title,source,content,author,keyword,intro,type,recommend,headline,topicId,createTime,updateTime,adminId)
        values
        (#{title},#{source},#{content},#{author},#{keyword},#{intro},#{type},#{recommend},#{headline},#{topicId},#{createTime},#{updateTime},#{adminId})
    </insert>
    <insert id="insert_channel_article" parameterType="Map">
        insert into t_channel_article (channelId, articleId) values (#{cid},#{aid});
    </insert>
    <insert id="insert_article_keyword" parameterType="Map">
        insert into t_article_keyword (articleId, keyword) values (#{aid},#{keyword});
    </insert>


    <delete id="del" parameterType="int">
        delete t_article, t_channel_article, t_article_keyword from t_article
        left join t_channel_article on t_article.id = t_channel_article.articleId
        left join t_article_keyword on t_article.id = t_article_keyword.articleId
        where t_article.id = #{id}
    </delete>
    <delete id="delCA_Conn" parameterType="int">
        delete from t_channel_article where articleId=#{id}
    </delete>
    <delete id="delAK_Conn" parameterType="int">
        delete from t_article_keyword where articleId=#{id}
    </delete>


    <select id="findArticleByTitle" parameterType="Map" resultType="Article">
        select * from t_article
        <if test="title != null">
            where title like '%${title}%'
        </if>
        order by createTime desc
        limit #{offset},#{pageSize}
    </select>
    <select id="findArticleByTitleForTotal" parameterType="Map" resultType="int">
        select count(*) from t_article
        <if test="title != null">
            where title like '%${title}%'
        </if>
    </select>


    <resultMap id="mappingChannel" type="Article">
        <!-- 其他的字段可以自动进行映射，因为名字都是对应的 -->
        <id property="id" column="id"/>
        <collection property="channels" column="id" ofType="Channel" select="searchChannel">
            <!-- 还可以在对查询到的集合中POJO对象的属性和字段再进行映射 -->
        </collection>
    </resultMap>
    <select id="findById" parameterType="int" resultMap="mappingChannel">
        select * from t_article where id=#{id}
    </select>
    <select id="searchChannel" parameterType="int" resultType="Channel">
        select * from t_channel c, t_channel_article ca where ca.articleId = #{id} AND c.id = ca.channelId
    </select>


    <update id="updateArticle" parameterType="Article">
        update t_article set
        title=#{title},
        source=#{source},
        content=#{content},
        author=#{author},
        keyword=#{keyword},
        intro=#{intro},
        type=#{type},
        recommend=#{recommend},
        headline=#{headline},
        updateTime=#{updateTime} where id = #{id}
    </update>


    <select id="findArticleByChannel" parameterType="Map" resultType="Article">
        select * from  t_article a
        <if test="c != null">
            ,t_channel_article ca where ca.channelId = #{c.id}
            AND a.id = ca.articleId

        </if>
        order by createTime desc
        limit #{offset},#{pageSize}
    </select>
    <select id="findArticleByChannelForTotal" parameterType="Map" resultType="int">
        <choose>
            <when test="c != null">
                select count(*) from  t_article AS a, t_channel_article AS ca where a.id = ca.articleId
                AND ca.channelId = #{c.id}
            </when>
            <otherwise>
                select count(*) from  t_article
            </otherwise>
        </choose>
    </select>

    <!--用于网页的都用Search-->
    <select id="searchHeadline" parameterType="int" resultType="Article">
        select * from t_article where headline=true order by createTime desc limit 0,#{max}
    </select>
    <select id="searchRecommend" parameterType="int" resultType="Article">
        select * from t_article where recommend=true order by createTime desc limit 0,#{max}
    </select>
    <!-- 查询相关文章用 -->
    <select id="searchArticleByKeyword" parameterType="Map" resultType="Integer">
        select distinct articleId from t_article_keyword where keyword in (${keyword})
    </select>
    <select id="searchArticleByIds" parameterType="Map" resultType="Article">
        select * from t_article where id in (${ids})
    </select>

    <!--  更新文章的留言数  -->
    <select id="selectLeaveNumber" parameterType="int" resultType="int"> select leaveNumber from t_article where id = #{id} </select>
    <update id="updateLeaveNumber" parameterType="Article">
        update t_article set leaveNumber = #{leaveNumber} where id = #{id}
    </update>
    <!--  更新文章的点击量  -->
    <select id="selectClickNumber" parameterType="int" resultType="int"> select clickNumber from t_article where id = #{id} </select>
    <update id="updateClickNumber" parameterType="Article">
         update t_article set clickNumber = #{clickNumber} where id = #{id}
    </update>


</mapper>